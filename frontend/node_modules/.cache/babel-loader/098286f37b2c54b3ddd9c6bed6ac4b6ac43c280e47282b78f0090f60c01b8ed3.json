{"ast":null,"code":"var _jsxFileName = \"/Users/jamiepan/Desktop/Social-Media-DashBoard/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport InstagramScrollBox from './sytling/InstagramScrollBox';\nimport FacebookScrollBox from './sytling/FacebookScrollBox';\nimport ScrollBox from './sytling/ScrollBox';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [twitterprofile, setTwitterProfile] = useState({});\n  const [instagramProfile, setInstagramProfile] = useState({});\n  const [instagramPosts, setInstagramPosts] = useState([]);\n  const [facebookProfile, setFacebookProfile] = useState({});\n  const [facebookPosts, setFacebookPosts] = useState([]);\n  const [selectedPlatform, setSelectedPlatform] = useState(null);\n  const handlePlatformSelect = platform => {\n    setSelectedPlatform(platform);\n  };\n  useEffect(() => {\n    async function fetchTwitterProfile() {\n      try {\n        const response = await fetch('http://localhost:5000/twitter/profile');\n        const data = await response.json();\n        setTwitterProfile(data);\n      } catch (error) {\n        console.error('Error authenticating with Twitter:', error);\n      }\n    }\n    async function fetchInstagramProfile() {\n      try {\n        const response = await fetch('http://localhost:5000/instagram/profile'); // Replace with your Instagram profile endpoint\n        const data = await response.json();\n        setInstagramProfile(data); // Update the Instagram profile state\n      } catch (error) {\n        console.error('Error fetching Instagram profile:', error);\n      }\n    }\n\n    // Fetch Instagram posts\n    async function fetchInstagramPosts() {\n      try {\n        const response = await fetch('http://localhost:5000/instagram/posts');\n        const data = await response.json();\n        setInstagramPosts(data); // Assuming your server returns posts data in the expected format\n      } catch (error) {\n        console.error('Error fetching Instagram posts:', error);\n      }\n    }\n    async function fetchFacebookProfile() {\n      try {\n        const response = await fetch('http://localhost:5000/facebook/profile'); // Replace with your Instagram profile endpoint\n        const data = await response.json();\n        setFacebookProfile(data); // Update the Instagram profile state\n      } catch (error) {\n        console.error('Error fetching Instagram profile:', error);\n      }\n    }\n\n    // Fetch Instagram posts\n    async function fetchFacebookPosts() {\n      try {\n        const response = await fetch('http://localhost:5000/facebook/posts');\n        const data = await response.json();\n        setFacebookPosts(data); // Assuming your server returns posts data in the expected format\n      } catch (error) {\n        console.error('Error fetching Instagram posts:', error);\n      }\n    }\n    fetchTwitterProfile();\n    fetchInstagramProfile();\n    fetchInstagramPosts();\n    fetchFacebookProfile();\n    fetchFacebookPosts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"main-title\",\n      children: \"Social Media Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"platform-selection-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"platform-selection-text\",\n        children: \"Choose your social media platform:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"platform-icons\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"Facebook.jpeg\",\n          alt: \"Facebook\",\n          onClick: () => handlePlatformSelect('facebook')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"Twitter.jpeg\",\n          alt: \"Twitter\",\n          onClick: () => handlePlatformSelect('twitter')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"Insta.jpeg\",\n          alt: \"Instagram\",\n          onClick: () => handlePlatformSelect('instagram')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-display-container\",\n      children: [selectedPlatform === 'facebook' && facebookProfile && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Facebook Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Name: \", facebookProfile.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"ID: \", facebookProfile.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), selectedPlatform === 'instagram' && instagramProfile && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Instagram Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Username: \", instagramProfile.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"ID: \", instagramProfile.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this), selectedPlatform === 'twitter' && twitterprofile && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Twitter Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Name: \", twitterprofile.user.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Username: \", twitterprofile.user.screen_name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this), !selectedPlatform && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Select a platform to view profile.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"posts-container-title\",\n        children: selectedPlatform ? `${selectedPlatform.charAt(0).toUpperCase() + selectedPlatform.slice(1)} Posts` : 'Posts'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 7\n      }, this), selectedPlatform === 'facebook' && /*#__PURE__*/_jsxDEV(FacebookScrollBox, {\n        id: \"Facebook Box\",\n        posts: facebookPosts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 43\n      }, this), selectedPlatform === 'instagram' && /*#__PURE__*/_jsxDEV(InstagramScrollBox, {\n        id: \"Instagram Box\",\n        posts: instagramPosts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 44\n      }, this), selectedPlatform === 'twitter' && /*#__PURE__*/_jsxDEV(ScrollBox, {\n        id: \"Twitter Box\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 42\n      }, this), \" \", !selectedPlatform && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Select a platform to view posts.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"umzWkO/RrlSaNccgTwMxEupLB/Y=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","InstagramScrollBox","FacebookScrollBox","ScrollBox","jsxDEV","_jsxDEV","App","_s","twitterprofile","setTwitterProfile","instagramProfile","setInstagramProfile","instagramPosts","setInstagramPosts","facebookProfile","setFacebookProfile","facebookPosts","setFacebookPosts","selectedPlatform","setSelectedPlatform","handlePlatformSelect","platform","fetchTwitterProfile","response","fetch","data","json","error","console","fetchInstagramProfile","fetchInstagramPosts","fetchFacebookProfile","fetchFacebookPosts","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onClick","name","id","username","user","screen_name","charAt","toUpperCase","slice","posts","_c","$RefreshReg$"],"sources":["/Users/jamiepan/Desktop/Social-Media-DashBoard/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport InstagramScrollBox from './sytling/InstagramScrollBox';\nimport FacebookScrollBox from './sytling/FacebookScrollBox';\nimport ScrollBox from './sytling/ScrollBox';\nimport './App.css';\n\nfunction App() {\n  const [twitterprofile, setTwitterProfile] = useState({});\n  const [instagramProfile, setInstagramProfile] = useState({});\n  const [instagramPosts, setInstagramPosts] = useState([]);\n  const [facebookProfile, setFacebookProfile] = useState({});\n  const [facebookPosts, setFacebookPosts] = useState([]);\n\n\n  const [selectedPlatform, setSelectedPlatform] = useState(null);\n  const handlePlatformSelect = (platform) => {\n    setSelectedPlatform(platform);\n  };\n\n  useEffect(() => {\n    async function fetchTwitterProfile() {\n      try {\n        const response = await fetch('http://localhost:5000/twitter/profile');\n        const data = await response.json();\n        setTwitterProfile(data)\n      } catch (error) {\n          console.error('Error authenticating with Twitter:', error);\n      }\n    }\n\n    async function fetchInstagramProfile() {\n      try {\n        const response = await fetch('http://localhost:5000/instagram/profile'); // Replace with your Instagram profile endpoint\n        const data = await response.json();\n        setInstagramProfile(data); // Update the Instagram profile state\n      } catch (error) {\n        console.error('Error fetching Instagram profile:', error);\n      }\n    }\n\n    // Fetch Instagram posts\n    async function fetchInstagramPosts() {\n      try {\n        const response = await fetch('http://localhost:5000/instagram/posts');\n        const data = await response.json();\n        setInstagramPosts(data); // Assuming your server returns posts data in the expected format\n      } catch (error) {\n        console.error('Error fetching Instagram posts:', error);\n      }\n    }\n\n    async function fetchFacebookProfile() {\n      try {\n        const response = await fetch('http://localhost:5000/facebook/profile'); // Replace with your Instagram profile endpoint\n        const data = await response.json();\n        setFacebookProfile(data); // Update the Instagram profile state\n      } catch (error) {\n        console.error('Error fetching Instagram profile:', error);\n      }\n    }\n\n    // Fetch Instagram posts\n    async function fetchFacebookPosts() {\n      try {\n        const response = await fetch('http://localhost:5000/facebook/posts');\n        const data = await response.json();\n        setFacebookPosts(data); // Assuming your server returns posts data in the expected format\n      } catch (error) {\n        console.error('Error fetching Instagram posts:', error);\n      }\n    }\n\n    fetchTwitterProfile();\n    fetchInstagramProfile();\n    fetchInstagramPosts();\n    fetchFacebookProfile();\n    fetchFacebookPosts();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"main-title\">Social Media Dashboard</h1>\n\n    <div className=\"platform-selection-box\">\n    <p className=\"platform-selection-text\">Choose your social media platform:</p>\n    <div className=\"platform-icons\">\n      <img \n        src=\"Facebook.jpeg\" \n        alt=\"Facebook\" \n        onClick={() => handlePlatformSelect('facebook')} \n      />\n      <img \n        src=\"Twitter.jpeg\" \n        alt=\"Twitter\" \n        onClick={() => handlePlatformSelect('twitter')} \n      />\n      <img \n        src=\"Insta.jpeg\" \n        alt=\"Instagram\" \n        onClick={() => handlePlatformSelect('instagram')} \n      />\n    </div>\n\n    </div>\n\n    {/* Profile Display Container */}\n    <div className=\"profile-display-container\">\n        {selectedPlatform === 'facebook' && facebookProfile && (\n          <div>\n            <h3>Facebook Profile</h3>\n            <p>Name: {facebookProfile.name}</p>\n            <p>ID: {facebookProfile.id}</p>\n            {/* Add more Facebook profile details here */}\n          </div>\n        )}\n        {selectedPlatform === 'instagram' && instagramProfile && (\n          <div>\n            <h3>Instagram Profile</h3>\n            <p>Username: {instagramProfile.username}</p>\n            <p>ID: {instagramProfile.id}</p>\n            {/* Add more Instagram profile details here */}\n          </div>\n        )}\n        {selectedPlatform === 'twitter' && twitterprofile && (\n          <div>\n            <h3>Twitter Profile</h3>\n            <p>Name: {twitterprofile.user.name}</p>\n            <p>Username: {twitterprofile.user.screen_name}</p>\n            {/* Add more Twitter profile details here */}\n          </div>\n        )}\n        {!selectedPlatform && <p>Select a platform to view profile.</p>}\n      </div>\n\n    {/* Posts Container */}\n    <div className=\"posts-container\">\n      <h2 className=\"posts-container-title\">\n        {selectedPlatform ? `${selectedPlatform.charAt(0).toUpperCase() + selectedPlatform.slice(1)} Posts` : 'Posts'}\n      </h2>\n      {selectedPlatform === 'facebook' && <FacebookScrollBox id=\"Facebook Box\" posts={facebookPosts}/>}\n      {selectedPlatform === 'instagram' && <InstagramScrollBox id=\"Instagram Box\" posts={instagramPosts}/>}\n      {selectedPlatform === 'twitter' && <ScrollBox id=\"Twitter Box\"/>} {/* Assuming you have a state for twitter posts */}\n      {/* If no platform is selected, you can show a default message or leave it blank */}\n      {!selectedPlatform && <p>Select a platform to view posts.</p>}\n    </div>\n    \n  \n\n\n      </div>\n);\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}